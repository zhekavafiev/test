services:
  php:
    build:
      context: .
      dockerfile: .docker/php/Dockerfile
      args:
        XDEBUG_ENABLE: ${XDEBUG_ENABLE:-false}
    command: rr serve -c .rr.dev.yaml
    environment:
      HISTFILE: /root/history/.history
      ENV: /root/.bashrc
      PHP_IDE_CONFIG: "serverName=${APP_NAME}"
    depends_on:
      - postgres
      - rabbitmq
    volumes:
      - .:/var/www/html:cached
    ports:
      - '8070:8080'
    extra_hosts:
      - "host.docker.internal:host-gateway"

  postgres:
    image: postgres:15.3-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-user-service-db}
      POSTGRES_USER: ${POSTGRES_USER:-user-service}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
    volumes:
      - db:/var/lib/postgresql/data
    ports:
      - ${EXT_DB_PORT}:5432
    restart: always

  rabbitmq:
    image: rabbitmq:3.12.14-management
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: password
    volumes:
      - rmq_data:/var/lib/rabbitmq/
      - rmq_logs:/var/log/rabbitmq
    ports:
      - '15682:15672'
      - '5682:5672'
    restart: always

  php-consumer:
    build:
      context: .
      dockerfile: .docker/php/Dockerfile
    command: php bin/console messenger:consume async
    restart: on-failure
    depends_on:
      - postgres
      - rabbitmq
    volumes:
      - .:/var/www/html:cached

###> doctrine/doctrine-bundle ###
  database:
    image: postgres:${POSTGRES_VERSION:-16}-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-app}
      # You should definitely change the password in production
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-!ChangeMe!}
      POSTGRES_USER: ${POSTGRES_USER:-app}
    healthcheck:
      test: ["CMD", "pg_isready", "-d", "${POSTGRES_DB:-app}", "-U", "${POSTGRES_USER:-app}"]
      timeout: 5s
      retries: 5
      start_period: 60s
    volumes:
      - database_data:/var/lib/postgresql/data:rw
      # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      # - ./docker/db/data:/var/lib/postgresql/data:rw
###< doctrine/doctrine-bundle ###

volumes:
  db: ~
  redis: ~
  rmq_data: ~
  rmq_logs: ~
###> doctrine/doctrine-bundle ###
  database_data:
###< doctrine/doctrine-bundle ###
